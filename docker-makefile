# The registry we are targetting
# REPO_URI      := $(or $(DOCKER_REGISTRY),docker-registry.example.com:5000)
# This is example of pushing to the global docker hub
REPO_URI        := timjdfletcher

# Sets the name of the container being built, get the current path for the container name
CURRENT_PATH  := $(notdir $(patsubst %/,%,$(CURDIR)))
# if IMAGE_NAME is undefined use the dir name we are in
NAME          := $(or $(IMAGE_NAME),${CURRENT_PATH})

# Set your version tag here, examples for git short tag and date below
# Defaults to GO_PIPELINE_LABEL
# TAG          := $(shell date +%Y%m%d%H%M%S)
TAG           := $(or $(GO_PIPELINE_LABEL),$(shell git rev-parse --short HEAD))

# Temp name to build against to avoid name clashes
IMG_BUILD     := ${NAME}:tmp

# Full final tag name to push to as well as latest
IMG           := ${REPO_URI}/${NAME}:${TAG}
BRANCH        := ${REPO_URI}/${NAME}:$(shell git rev-parse --abbrev-ref HEAD)
LATEST        := ${REPO_URI}/${NAME}:latest
TAG_FILE      := image_full_tag.txt

# Default commands for running our docker container
CMD           := bash
# Commands passed to Docker to test the container
TESTS         := $(addsuffix .test, $(patsubst %.c,%.o,$(wildcard tests/*)))

# When the bare command 'make' is run what do we do?
all: tag

# If you need to login to Dockerhub
login:
	@docker log -u ${DOCKER_USER} -p ${DOCKER_PASS}
.PHONY: login

# Show logs for the temp container
logs:
	@docker logs ${NAME}_${TAG}
.PHONY: logs

# Run the temp container, to run a different command call make thus:
# make run CMD=mycommand
run: 
	@docker run -it ${IMG_BUILD} ${CMD} 
.PHONY: run

# Delete any container images we have built
clean:
	-@docker rm ${NAME}_${TAG}
	-@docker rmi ${IMG_BUILD}
.PHONY: clean

# Delete any container images we depend on
cleanall: clean
	-@docker images -q "*/${NAME}" | xargs docker image rm
.PHONY: cleanall

# Pull the latest version for build speed ups, and the tag we are building to avoid dups
pull:
	-@docker pull ${LATEST}
	@docker pull ${IMG} || exit 0 && echo Tag already exists upstream at ${IMG}, exiting ; exit 1 
.PHONY: pull

# Build a container with a temp tag to avoid clashes
build: pull
	@docker build -t ${IMG_BUILD} .
.PHONY: build

# Test your docker container works 
test: build $(TESTS)
.PHONY: test

%.test : %
	@echo Running test $<
	@docker run --name ${NAME}_${TAG} ${IMG_BUILD} $(shell cat $<)
	@docker rm  ${NAME}_${TAG}
.PHONY: %.test

# Tag your container with the version tag and latest
tag: test
	@docker tag ${IMG_BUILD} ${IMG}
	@docker tag ${IMG_BUILD} ${LATEST}
	@docker tag ${IMG_BUILD} ${BRANCH}

# Push your container out to the registery
push: tag
	@docker push ${IMG}
	@docker push ${LATEST}
	@docker push ${BRANCH}
	@echo ${NAME} built and pushed to ${IMG}
ifdef GO_PIPELINE_NAME
	$(info Running in a GoCD pipeline writing image details to ${TAG_FILE})
	@echo ${IMG} > ${TAG_FILE}
endif
.PHONY: push
